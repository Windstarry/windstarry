import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.c9ba2ff1.js";const F=JSON.parse('{"title":"Django-Ninja-Extra的基本用法","description":"Django-Ninja-Extra的基本用法","frontmatter":{"title":"Django-Ninja-Extra的基本用法","description":"Django-Ninja-Extra的基本用法","date":"2024-1-26","recommend":1,"sticky":1,"tags":["python","项目实战","Django"],"categories":["python"]},"headers":[],"relativePath":"learn/python/Django-Ninja-Extra的基本用法.md","filePath":"learn/python/Django-Ninja-Extra的基本用法.md"}'),p={name:"learn/python/Django-Ninja-Extra的基本用法.md"},o=l(`<h1 id="django-ninja-extra的基本用法" tabindex="-1">Django-Ninja-Extra的基本用法 <a class="header-anchor" href="#django-ninja-extra的基本用法" aria-label="Permalink to &quot;Django-Ninja-Extra的基本用法&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Django-Ninja-Extra是一个基于Django-Ninja的扩展，提供了基于类的方法和额外的功能，可以加快Django Ninja的RESTful API开发速度。</p><h3 id="主要特点" tabindex="-1">主要特点： <a class="header-anchor" href="#主要特点" aria-label="Permalink to &quot;主要特点：&quot;">​</a></h3><h4 id="所有-django-ninja-功能" tabindex="-1">所有 Django-Ninja 功能： <a class="header-anchor" href="#所有-django-ninja-功能" aria-label="Permalink to &quot;所有 Django-Ninja 功能：&quot;">​</a></h4><ul><li>简单：设计为易于使用和直观。</li><li>快速执行：由于 Pydantic 和异步支持，性能非常高。</li><li>快速编码：键入提示和自动文档可让您仅关注业务逻辑。</li><li>基于标准：基于 API 的开放标准：OpenAPI（以前称为 Swagger）和 JSON Schema。</li><li>Django 友好：（显然）与 Django 核心和 ORM 有很好的集成。</li></ul><h4 id="额外" tabindex="-1">额外： <a class="header-anchor" href="#额外" aria-label="Permalink to &quot;额外：&quot;">​</a></h4><ul><li>基于类：以基于类的方式设计 API。</li><li>权限：通过在路由级别或控制器级别定义的权限和授权，轻松保护端点。</li><li>依赖注入：控制器类支持使用 python Injector 或 django_injector 进行依赖注入。使您能够将 API 可靠的服务注入 APIController 类，并在需要时使用它们</li></ul><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">django-ninja-extra</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">django-ninja-extra</span></span></code></pre></div><p>安装完成后添加ninja_extra到INSTALLED_APPS</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">INSTALLED_APPS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;ninja_extra&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">INSTALLED_APPS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;ninja_extra&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><p>在 django 项目中，在urls.py同目录下创建新文件：api.py</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> ninja_extra </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> NinjaExtraAPI, api_controller, http_get</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> NinjaExtraAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 传统方法</span></span>
<span class="line"><span style="color:#B392F0;">@api.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/add&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">tags</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;Math&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(request, a: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, b: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#E1E4E8;">: a </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 基于类的方法</span></span>
<span class="line"><span style="color:#B392F0;">@api_controller</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">tags</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;Math&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#FFAB70;">permissions</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[])</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MathAPI</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@http_get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/subtract&#39;</span><span style="color:#E1E4E8;">,)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">subtract</span><span style="color:#E1E4E8;">(self, a: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, b: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Subtracts a from b&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#E1E4E8;">: a </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@http_get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/divide&#39;</span><span style="color:#E1E4E8;">,)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">divide</span><span style="color:#E1E4E8;">(self, a: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, b: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Divides a by b&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#E1E4E8;">: a </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@http_get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/multiple&#39;</span><span style="color:#E1E4E8;">,)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">multiple</span><span style="color:#E1E4E8;">(self, a: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, b: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Multiples a with b&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#E1E4E8;">: a </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">api.register_controllers(</span></span>
<span class="line"><span style="color:#E1E4E8;">    MathAPI</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> ninja_extra </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> NinjaExtraAPI, api_controller, http_get</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> NinjaExtraAPI()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 传统方法</span></span>
<span class="line"><span style="color:#6F42C1;">@api.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/add&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">tags</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&#39;Math&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(request, a: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, b: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#24292E;">: a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 基于类的方法</span></span>
<span class="line"><span style="color:#6F42C1;">@api_controller</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">tags</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&#39;Math&#39;</span><span style="color:#24292E;">], </span><span style="color:#E36209;">permissions</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[])</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MathAPI</span><span style="color:#24292E;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@http_get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/subtract&#39;</span><span style="color:#24292E;">,)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">subtract</span><span style="color:#24292E;">(self, a: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, b: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Subtracts a from b&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#24292E;">: a </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@http_get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/divide&#39;</span><span style="color:#24292E;">,)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">divide</span><span style="color:#24292E;">(self, a: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, b: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Divides a by b&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#24292E;">: a </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@http_get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/multiple&#39;</span><span style="color:#24292E;">,)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">multiple</span><span style="color:#24292E;">(self, a: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, b: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Multiples a with b&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#24292E;">: a </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> b}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">api.register_controllers(</span></span>
<span class="line"><span style="color:#24292E;">    MathAPI</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>在urls.py中添加路由</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> django.urls </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> path</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> .api </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> api</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">urlpatterns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    path(</span><span style="color:#9ECBFF;">&quot;admin/&quot;</span><span style="color:#E1E4E8;">, admin.site.urls),</span></span>
<span class="line"><span style="color:#E1E4E8;">    path(</span><span style="color:#9ECBFF;">&quot;api/&quot;</span><span style="color:#E1E4E8;">, api.urls),  </span><span style="color:#6A737D;"># &lt;---------- !</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> django.urls </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> path</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> .api </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> api</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">urlpatterns </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    path(</span><span style="color:#032F62;">&quot;admin/&quot;</span><span style="color:#24292E;">, admin.site.urls),</span></span>
<span class="line"><span style="color:#24292E;">    path(</span><span style="color:#032F62;">&quot;api/&quot;</span><span style="color:#24292E;">, api.urls),  </span><span style="color:#6A737D;"># &lt;---------- !</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h3 id="生成文档" tabindex="-1">生成文档 <a class="header-anchor" href="#生成文档" aria-label="Permalink to &quot;生成文档&quot;">​</a></h3><p>转到 <a href="http://127.0.0.1:8000/api/docs" target="_blank" rel="noreferrer">http://127.0.0.1:8000/api/docs</a>, 可以看到Swagger UI生成的交互式文档</p>`,20),t=[o];function e(r,c,E,y,i,u){return a(),n("div",null,t)}const h=s(p,[["render",e]]);export{F as __pageData,h as default};
