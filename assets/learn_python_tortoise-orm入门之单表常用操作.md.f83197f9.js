import{_ as s,o as a,c as n,W as l}from"./chunks/framework.1977b413.js";const o="/windstarry/assets/7bf174c3fb457543d7356c5e659046b9c1e6e2f8eb91c43dd8a432952c815952.7bf174c3.png",p="/windstarry/assets/a67fb7595f9d4fbe8887a1bf8b9bffc9310f243894defca1e3b3d99f130bcb4b.a67fb759.png",e="/windstarry/assets/0a564d4d2af312d8076dc3ef08aafdfa800bfa34af2694ef86c1b42231c2e4e6.0a564d4d.png",u=JSON.parse('{"title":"tortoise-orm入门之单表常用操作","description":"tortoise-orm入门之单表常用操作","frontmatter":{"title":"tortoise-orm入门之单表常用操作","description":"tortoise-orm入门之单表常用操作","date":"2023-5-19","recommend":1,"sticky":3,"tags":["python","项目实战","tortoise","fastapi"],"categories":["python"]},"headers":[],"relativePath":"learn/python/tortoise-orm入门之单表常用操作.md"}'),t={name:"learn/python/tortoise-orm入门之单表常用操作.md"},c=l(`<h1 id="tortoise-orm入门之单表常用操作" tabindex="-1">tortoise-orm入门之单表常用操作 <a class="header-anchor" href="#tortoise-orm入门之单表常用操作" aria-label="Permalink to &quot;tortoise-orm入门之单表常用操作&quot;">​</a></h1><h2 id="创建用户模型" tabindex="-1">创建用户模型 <a class="header-anchor" href="#创建用户模型" aria-label="Permalink to &quot;创建用户模型&quot;">​</a></h2><ul><li>在创建模型类时，把一些公共的字段抽离出来，用继承方式重复利用。</li><li>如果模型类型的字段与数据库字不一样时候，可以通过source_field指定。</li><li>Meta定义表的元数据信息，例如：表名，表描述信息等等</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#models.py</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MixinTimeFiled</span><span style="color:#89DDFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 添加数据时间</span></span>
<span class="line"><span style="color:#A6ACCD;">    created </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DatetimeField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">null</span><span style="color:#89DDFF;">=True,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">auto_now_add</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 修改数据时间</span></span>
<span class="line"><span style="color:#A6ACCD;">    modified </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DatetimeField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">null</span><span style="color:#89DDFF;">=True,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">auto_now</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">userModel</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">MixinTimeFiled</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">id</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BigIntField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pk</span><span style="color:#89DDFF;">=True,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户ID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">=True,</span><span style="color:#A6ACCD;font-style:italic;">source_field</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">source_field</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    phone </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">电话号</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    idcard </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">身份号</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    birthDate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">出生年月</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    email </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">邮箱地址</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    address </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">地址信息</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Meta</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        table </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>关于各字段的用法查看<a href="https://tortoise.github.io/fields.html#tortoise.models.Model.in_bulk" target="_blank" rel="noreferrer">官方文档</a></p><h2 id="配置数据库相关信息" tabindex="-1">配置数据库相关信息 <a class="header-anchor" href="#配置数据库相关信息" aria-label="Permalink to &quot;配置数据库相关信息&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Tortoise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">db_url</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mysql://didiplus:didiplus558@192.168.0.220:3306/tortoise</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">modules</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">models</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">models</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Generate the schema</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Tortoise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">generate_schemas</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># safe：仅在表不存在时创建表</span></span>
<span class="line"></span></code></pre></div><h2 id="增-create" tabindex="-1">增(Create) <a class="header-anchor" href="#增-create" aria-label="Permalink to &quot;增(Create)&quot;">​</a></h2><p>Tortoise ORM 模型提供了create方法，通过查看源码create方法实际上也是调用了save方法。所以，有两种方式添加数据。</p><p><img src="`+o+`" alt="图片"></p><p>可以使用Faker这个库去模拟用户数据，具体的用法请参考这篇<a href="https://juejin.cn/post/7064457994540417038" target="_blank" rel="noreferrer">文章</a></p><h3 id="_1-save-方法新增数据" tabindex="-1">1.save 方法新增数据： <a class="header-anchor" href="#_1-save-方法新增数据" aria-label="Permalink to &quot;1.save 方法新增数据：&quot;">​</a></h3><p>通过实例化用户模型类的方式，调用save方式创建数据，核心代码如下：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fake </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Faker</span><span style="color:#89DDFF;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">zh_CN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">id_card </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ssn</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">userModel</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">phone</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">phone_number</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">idcard</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ssn</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">birthDate</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> id_card</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">14</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">email</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">email</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">save</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>由于Tortoise ORM采用了异步编程方式，所以，需要通过run_async函数去调用add方式.核心代码如下：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run_async</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#连接数据库</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run_async</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">())</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-create方法新增数据" tabindex="-1">2.create方法新增数据 <a class="header-anchor" href="#_2-create方法新增数据" aria-label="Permalink to &quot;2.create方法新增数据&quot;">​</a></h3><p>直接通过用户模型类赋值方式，然后调用create方法。核心代码如下：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add2</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">userModel</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">phone</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">phone_number</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">idcard</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ssn</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">birthDate</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> id_card</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">14</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">email</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">email</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>执行之后，数据库会生成两条数据，如下图： <img src="`+p+`" alt="图 4"></p><h3 id="_3-批量添加数据" tabindex="-1">3.批量添加数据 <a class="header-anchor" href="#_3-批量添加数据" aria-label="Permalink to &quot;3.批量添加数据&quot;">​</a></h3><p>Tortoise ORM模型类中也封装了批量新增数据的函数bulk_create。 通过观察源码的注解，该方法调用方式，只要传入一个list列表，列表里的元素是user模型对象即可。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">bulk_add</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    usersList </span><span style="color:#89DDFF;">=[]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        id_card </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ssn</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">userModel</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;font-style:italic;">phone</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">phone_number</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;font-style:italic;">idcard</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ssn</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;font-style:italic;">birthDate</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> id_card</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">14</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;font-style:italic;">email</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">email</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        usersList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">user</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bulk_create</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">usersList</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>先通过一个for循环生成11个userModel对象，然后中通过调userModel的bulk_create方法，把这个11个用户信息写入数据库中。</p><p><img src="`+e+`" alt="图 3"></p><h2 id="删除-delete" tabindex="-1">删除(Delete) <a class="header-anchor" href="#删除-delete" aria-label="Permalink to &quot;删除(Delete)&quot;">​</a></h2><p>Tortoise ORM模型类中封装了Delete方法，通过过来查询出要删除的对象，然后再调用delete方法。核心代码如下：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#删除ID为1的数据，返回的是被改的行数</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deleteById</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">delete</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>Tortoise ORM模型中没有封装批量删除的方式，后续可以根据自己的业务情况自行封装。</p><h2 id="修改-update" tabindex="-1">修改(update) <a class="header-anchor" href="#修改-update" aria-label="Permalink to &quot;修改(update)&quot;">​</a></h2><p>Tortoise ORM模型中封装了几个有关更新的方法，分别是update_from_dict、update_or_create、update。其中update是通过filter查询对象，再更新相应的字段。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">update</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">update</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fake</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#89DDFF;">())</span></span>
<span class="line"></span></code></pre></div><h2 id="查看-select" tabindex="-1">查看(select) <a class="header-anchor" href="#查看-select" aria-label="Permalink to &quot;查看(select)&quot;">​</a></h2><h3 id="_1-all" tabindex="-1">1.all <a class="header-anchor" href="#_1-all" aria-label="Permalink to &quot;1.all&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#查询所有，返回是用户模型对象[&lt;userModel: 2&gt;,...]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#过滤需要的字段，返回dict对象</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">values</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">order_by</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-created</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#排序，-是降序</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#分页查询</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">offset</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">limit</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-get" tabindex="-1">2.get <a class="header-anchor" href="#_2-get" aria-label="Permalink to &quot;2.get&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#根据条件查询符合的对象，条件需唯一 return UserModel</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#查询不到返回None，避免出现对象不存在的异常</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_or_none</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-filter-条件过滤" tabindex="-1">3.filter 条件过滤 <a class="header-anchor" href="#_3-filter-条件过滤" aria-label="Permalink to &quot;3.filter 条件过滤&quot;">​</a></h3><p>其实filter的用法和get的差不多，都是通过条件过滤。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 获取第一个符合条件的 return UserModel</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">林超</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 获取原生sql</span></span>
<span class="line"><span style="color:#A6ACCD;">userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">林超</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">sql</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><h3 id="原生sql" tabindex="-1">原生SQL <a class="header-anchor" href="#原生sql" aria-label="Permalink to &quot;原生SQL&quot;">​</a></h3><p>在项目中有时候可能需要执行原生的SQL语言。可以使用下面的方式执行：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">executSQL</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">sql</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    conn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> connections</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    res</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute_query_dict</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sql</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res</span></span>
<span class="line"></span></code></pre></div><h2 id="filter-q" tabindex="-1">filter Q <a class="header-anchor" href="#filter-q" aria-label="Permalink to &quot;filter Q&quot;">​</a></h2><p>在使用之前先执行如下代码引入依赖</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> tortoise</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">models </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Q</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> userModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Q</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">蒋洁</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">join_type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OR</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)).</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>关于Q的更多用法请查阅<a href="https://tortoise.github.io/expressions.html?h=q#tortoise.models.Model.in_bulk" target="_blank" rel="noreferrer">官方文档</a></p>`,47),r=[c];function F(y,D,i,A,C,d){return a(),n("div",null,r)}const h=s(t,[["render",F]]);export{u as __pageData,h as default};
