import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.c9ba2ff1.js";const p="/windstarry/assets/0c1a9ff6a55799420c0c8ac74db93c5b846cc86827ab2a3083b4358439040ab1.0c1a9ff6.png",o="/windstarry/assets/4118eeacd2fd47b718506c667cf13f5870e706ceffef70707006469c6923e9e2.4118eeac.png",e="/windstarry/assets/3c882d297e37a143adc56c59b49457437fb9824d7343999f56b3bb7ffbf93a03.3c882d29.png",m=JSON.parse('{"title":"关于FastAPI与Vue3的通信","description":"关于FastAPI与Vue3的通信","frontmatter":{"title":"关于FastAPI与Vue3的通信","description":"关于FastAPI与Vue3的通信","date":"2023-4-10","recommend":2,"sticky":4,"tags":["python","项目实战","FastApi"],"categories":["python","FastApi"]},"headers":[],"relativePath":"learn/python/关于FastAPI与Vue3的通信.md","filePath":"learn/python/关于FastAPI与Vue3的通信.md"}'),t={name:"learn/python/关于FastAPI与Vue3的通信.md"},c=l(`<h1 id="fastapi与vue3的通信" tabindex="-1">FastAPI与Vue3的通信 <a class="header-anchor" href="#fastapi与vue3的通信" aria-label="Permalink to &quot;FastAPI与Vue3的通信&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>在设计网络程序时，前后端的分离设计已经是一门成熟的技术,本着不断学习的理念，现计划学习一下前后端分离技术，前端采用三大框架之一的Vue3，后端则采用Python的FastAPI框架,通过完成前后端最基本的通信问题来详细说明如何设置前端和后端。</p><h2 id="一、前端设计" tabindex="-1">一、前端设计 <a class="header-anchor" href="#一、前端设计" aria-label="Permalink to &quot;一、前端设计&quot;">​</a></h2><p>新建一个文件夹，比如mydemo，然后切换到该目录，运行下面命令,借助官方的自动生成框架：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vue@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vue@latest</span></span></code></pre></div><p>使用yarn初始化,并使用vite命令创建</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vite</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">frontend</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--template</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vue</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vite</span><span style="color:#24292E;"> </span><span style="color:#032F62;">frontend</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--template</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vue</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">使用yarn的优点</p><p><strong>yarn的特点：快，安全，可靠</strong></p><ul><li>Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。</li><li>超级安全-在执行代码之前，Yarn 会通过算法校验每个安装包的完整性。</li><li>超级可靠-使用详细、简洁的锁文件格式和明确的安装算法，Yarn 能够保证在不同系统上无差异的工作。</li></ul></div><p>这个命令会自动调用create-vue，这是vue的官方脚手架工具，为了区分前后端，在该项目下，建议初始将所要创建的工程名设置为<strong>frontend</strong>，以区分同一个目录下的后端文件夹<strong>backend</strong>（目前该文件夹还未创建）。 运行下面命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">frontend</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">frontend</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span></span></code></pre></div><p>或者使用yarn的命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span></span>
<span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span></span>
<span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span></span></code></pre></div><p>此时在浏览器中输入网址<a href="http://127.0.0.1:5174/" target="_blank" rel="noreferrer">http://127.0.0.1:5174</a>(注意：端口有可能是5173)，就可以看到前端项目的页面了。</p><h2 id="二、后端设计" tabindex="-1">二、后端设计 <a class="header-anchor" href="#二、后端设计" aria-label="Permalink to &quot;二、后端设计&quot;">​</a></h2><p>安装FastAPI是容易的，在命令窗口运行如下代码：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fastapi</span></span>
<span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uvicorn[standard]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fastapi</span></span>
<span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uvicorn[standard]</span></span></code></pre></div><p>以上代码完成了FastAPI的基本安装，接下来在mydemo文件夹下创建一个backend文件夹，用以存放后端文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mydemo</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">backend</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mydemo</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">backend</span></span></code></pre></div><p>在backend文件夹中创建一个main.py文件，其中代码如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fastapi </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> FastAPI</span></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FastAPI()</span></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">read_root</span><span style="color:#E1E4E8;">():    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;World&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_root</span><span style="color:#24292E;">():    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>保存后，在backend路径的命令窗口运行以下代码：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">uvicorn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">main:app</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--reload</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--port</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8001</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">uvicorn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main:app</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--reload</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">--port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8001</span></span></code></pre></div><p>则启动了后端服务器</p><h2 id="三、前端获取后端的数据" tabindex="-1">三、前端获取后端的数据 <a class="header-anchor" href="#三、前端获取后端的数据" aria-label="Permalink to &quot;三、前端获取后端的数据&quot;">​</a></h2><p>为了让前后端通信，需要在两者之间建立桥梁，毕竟两个服务器运行的是不同的网址，因此，一个基本的思路是要让前端知道从哪个网址获取信息，同时也要让后端知道请求方来自何处。 这时需要用到两个包，即前端需要用到axios这个包，后端则要用到CORS这个中间件。</p><h3 id="_1、前端的设置" tabindex="-1">1、前端的设置 <a class="header-anchor" href="#_1、前端的设置" aria-label="Permalink to &quot;1、前端的设置&quot;">​</a></h3><ol><li>安装axios，在frontend文件夹的命令窗口下运行以下命令：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">axios</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">axios</span></span></code></pre></div><p>或者</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">axios</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">axios</span></span></code></pre></div><ol><li>修改<strong>frontend/src/main.js</strong>文件</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {createAPP} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> App </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./App.vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/assets/main.css&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 导入axios，数据发送的地址是http://127.0.0.1:8001</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> axios </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">axios.defaults.baseURL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://localhost:8001&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">axios.defaults.withCredentials </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">createAPP</span><span style="color:#E1E4E8;">(App).</span><span style="color:#B392F0;">mount</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#app&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {createAPP} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> App </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./App.vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/assets/main.css&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 导入axios，数据发送的地址是http://127.0.0.1:8001</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> axios </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#24292E;">axios.defaults.baseURL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://localhost:8001&#39;</span></span>
<span class="line"><span style="color:#24292E;">axios.defaults.withCredentials </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">createAPP</span><span style="color:#24292E;">(App).</span><span style="color:#6F42C1;">mount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#app&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><ol><li>在<strong>frontend/src/App.vue</strong>中，添加获取数据的代码</li></ol><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> axios </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axios&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        msg: </span><span style="color:#9ECBFF;">&quot;你好，世界！&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    methods: {  </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">getMessage</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.msg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> res.data;        </span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">      },    </span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;getMessage&quot;</span><span style="color:#E1E4E8;">&gt;第一个按钮&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;{{ msg }}&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> axios </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axios&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        msg: </span><span style="color:#032F62;">&quot;你好，世界！&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    methods: {  </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">getMessage</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.msg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res.data;        </span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">      },    </span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;getMessage&quot;</span><span style="color:#24292E;">&gt;第一个按钮&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;{{ msg }}&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>点击按钮前获取到的数据 <img src="`+p+'" alt="图 1"><br> 点击后从后端获取的数据 <img src="'+o+`" alt="图 2"></p><div class="tip custom-block"><p class="custom-block-title">代码注释</p><p>在上述代码中，给按钮绑定了一个click事件，当这个按钮被点击时，它会调用getMessage()函数，该函数中用axios去获得后端根目录下的数据，然后将要显示的文字更改为相应的返回值{hello:world}。</p></div><p>至此，前端配置完成，此时点击页面按钮不会有任何反应，如果打开网页开发工具中的控制台，你会看到错误信息。</p><h3 id="_2、后端的设置" tabindex="-1">2、后端的设置 <a class="header-anchor" href="#_2、后端的设置" aria-label="Permalink to &quot;2、后端的设置&quot;">​</a></h3><p>在FastAPI中，设置CORS是很简单的。</p><div class="tip custom-block"><p class="custom-block-title">注意事项</p><p>当前端的axios.defaults.withCredentials设置为true时，后面的响应地址就必须明确为字符串，而不能是一个列表。</p></div><p>这里的意思是，当跨域访问需要带session时，只能响应确定的地址请求。添加中间件CORS的代码如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fastapi </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> FastAPI</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fastapi.middleware.cors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> CORSMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FastAPI()</span></span>
<span class="line"><span style="color:#E1E4E8;">app.add_middleware(</span></span>
<span class="line"><span style="color:#E1E4E8;">    CORSMiddleware,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_origins</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://127.0.0.1:5174/&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_credentials</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_methods</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_headers</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],    </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">read_root</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;World&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi.middleware.cors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> CORSMiddleware</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"><span style="color:#24292E;">app.add_middleware(</span></span>
<span class="line"><span style="color:#24292E;">    CORSMiddleware,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_origins</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://127.0.0.1:5174/&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_credentials</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_methods</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_headers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],    </span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_root</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>至此，后端代码修改完毕。 此时，当点击一下页面的按钮，其下方的文字将变成后端FastAPI发送的信息，完成了从服务器端获取数据的过程。</p><h2 id="四、前端向后端发送数据" tabindex="-1">四、前端向后端发送数据 <a class="header-anchor" href="#四、前端向后端发送数据" aria-label="Permalink to &quot;四、前端向后端发送数据&quot;">​</a></h2><p>当我们在客户端填写或是更改某个数据之后，往往需要将数据发送给服务器端，此时就需要用到数据的发送功能。</p><h3 id="_1、客户端设置" tabindex="-1">1、客户端设置 <a class="header-anchor" href="#_1、客户端设置" aria-label="Permalink to &quot;1、客户端设置&quot;">​</a></h3><p>先在<strong>frontend/src/App.vue</strong>中添加一个发送的方法，同时添加一个按钮，当用户点击该按钮时，调用axios发送数据给服务器端，修改代码如下：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> axios </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axios&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        msg: </span><span style="color:#9ECBFF;">&quot;你好，世界！&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    methods: {  </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;"> () { </span></span>
<span class="line"><span style="color:#E1E4E8;">        axios.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;/update_item/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          {name: </span><span style="color:#9ECBFF;">&quot;张无忌&quot;</span><span style="color:#E1E4E8;">, age:</span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">        ).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res.data);</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">getMessage</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.msg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> res.data;        </span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    },    </span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;getMessage&quot;</span><span style="color:#E1E4E8;">&gt;第一个按钮&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;sendMessage&quot;</span><span style="color:#E1E4E8;">&gt;发送信息给服务器&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;{{ msg }}&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> axios </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axios&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        msg: </span><span style="color:#032F62;">&quot;你好，世界！&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    methods: {  </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;"> () { </span></span>
<span class="line"><span style="color:#24292E;">        axios.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;/update_item/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          {name: </span><span style="color:#032F62;">&quot;张无忌&quot;</span><span style="color:#24292E;">, age:</span><span style="color:#005CC5;">24</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">        ).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res.data);</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">getMessage</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.msg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res.data;        </span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">    },    </span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;getMessage&quot;</span><span style="color:#24292E;">&gt;第一个按钮&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sendMessage&quot;</span><span style="color:#24292E;">&gt;发送信息给服务器&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;{{ msg }}&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">注意事项</p><p>axios发送数据时，其数据是以字典的形式发送，当然也可以看作是json格式。</p></div><p>在这里，axios提交的路径是/update_item/，因此服务器端必须建立该路由。</p><h3 id="_2、服务器端设置" tabindex="-1">2、服务器端设置 <a class="header-anchor" href="#_2、服务器端设置" aria-label="Permalink to &quot;2、服务器端设置&quot;">​</a></h3><p>为了接受客户端提交过来的数据，要进行两步操作：一是设立相应的路由地址，二是设置接受数据的模型，此时用到pydantic，该包会在安装fastAPI时同步安装，该包的主要功能是对接口数据进行定义、检查与管理。 在下面示例中，我们定义一个Item类来接受客户端提交的数据，<strong>backend/main.py</strong>的代码修改如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fastapi </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> FastAPI</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fastapi.middleware.cors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> CORSMiddleware</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pydantic </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> BaseModel</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> typing </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Union</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">BaseModel</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#79B8FF;">str</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    is_TrueMan: Union[</span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FastAPI()</span></span>
<span class="line"><span style="color:#E1E4E8;">app.add_middleware(</span></span>
<span class="line"><span style="color:#E1E4E8;">    CORSMiddleware,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_origins</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://127.0.0.1:5174/&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_credentials</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_methods</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_headers</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],    </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">read_root</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;World&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/update_item/&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_item</span><span style="color:#E1E4E8;">(item: Item):</span></span>
<span class="line"><span style="color:#E1E4E8;">    item.age </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(item)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&#39;item&#39;</span><span style="color:#E1E4E8;">:item}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> FastAPI</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi.middleware.cors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> CORSMiddleware</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pydantic </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BaseModel</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> typing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Union</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseModel</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    is_TrueMan: Union[</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FastAPI()</span></span>
<span class="line"><span style="color:#24292E;">app.add_middleware(</span></span>
<span class="line"><span style="color:#24292E;">    CORSMiddleware,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_origins</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://127.0.0.1:5174/&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_credentials</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_methods</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_headers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],    </span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_root</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/update_item/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_item</span><span style="color:#24292E;">(item: Item):</span></span>
<span class="line"><span style="color:#24292E;">    item.age </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(item)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&#39;item&#39;</span><span style="color:#24292E;">:item}</span></span></code></pre></div><p>这里将接受到的人员年龄增加10后，打印在服务器端的控制台上，并将修改的结果返回给客户端，由客户端打印在浏览器的控制台上。服务器接受并修改了客户端传送过来的数据，客户端也接受到了修改后的数据。 <img src="`+e+'" alt="图 3"><br> 至此，完成了一个客户端与服务器端完整的通信程序。</p><h2 id="仓库代码" tabindex="-1">仓库代码 <a class="header-anchor" href="#仓库代码" aria-label="Permalink to &quot;仓库代码&quot;">​</a></h2><p><a href="https://gitee.com/windstarry/fastapi_vue_demo" target="_blank" rel="noreferrer">仓库代码展示</a></p><h2 id="相关文章" tabindex="-1">相关文章 <a class="header-anchor" href="#相关文章" aria-label="Permalink to &quot;相关文章&quot;">​</a></h2><ol><li><a href="./关于FastAPI与Vue3的通信.html">关于FastAPI与Vue3的通信</a></li><li><a href="./FastAPI对数据库的增删改查.html">FastAPI对数据库的增删改查</a></li><li><a href="./基于Vue3和FastAPI对数据库进行操作.html">基于Vue3和FastAPI对数据库进行操作</a></li></ol>',59),r=[c];function E(y,i,d,F,u,h){return a(),n("div",null,r)}const C=s(t,[["render",E]]);export{m as __pageData,C as default};
