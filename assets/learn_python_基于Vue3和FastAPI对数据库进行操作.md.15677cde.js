import{_ as a,o as l,c as p,Q as o}from"./chunks/framework.c9ba2ff1.js";const s="/windstarry/assets/b85da606a83e009812cef9426ca31695a38ee9278c68bec4591f977cbc93645b.b85da606.png",e="/windstarry/assets/b101d6d823edc62f98dc618463c23a6474c41b31da955a9caa4b0db2353e6002.b101d6d8.png",n="/windstarry/assets/c6a39b174594205d800c0f0fecd1e2ffb4f04035859fcd62bf7d15d842dc50fe.c6a39b17.png",k=JSON.parse('{"title":"基于Vue3和FastAPI对数据库进行操作","description":"基于Vue3和FastAPI对数据库进行操作","frontmatter":{"title":"基于Vue3和FastAPI对数据库进行操作","description":"基于Vue3和FastAPI对数据库进行操作","date":"2023-4-10","recommend":2,"sticky":4,"tags":["python","项目实战","FastApi"],"categories":["python","FastApi"]},"headers":[],"relativePath":"learn/python/基于Vue3和FastAPI对数据库进行操作.md","filePath":"learn/python/基于Vue3和FastAPI对数据库进行操作.md"}'),t={name:"learn/python/基于Vue3和FastAPI对数据库进行操作.md"},c=o(`<h1 id="基于vue3和fastapi对数据库进行操作" tabindex="-1">基于Vue3和FastAPI对数据库进行操作 <a class="header-anchor" href="#基于vue3和fastapi对数据库进行操作" aria-label="Permalink to &quot;基于Vue3和FastAPI对数据库进行操作&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>在<a href="./FastAPI对数据库的增删改查.html">FastAPI对数据库的增删改查</a>中，介绍了如何利用FastAPI对数据库的增删改查，这属于服务器端的操作，那么如何结合客户端一起操作数据呢？ 这篇文章来详细讨论一下如何利用Vue3作客户端对数据库进行操作。</p><h2 id="服务器端的设置" tabindex="-1">服务器端的设置 <a class="header-anchor" href="#服务器端的设置" aria-label="Permalink to &quot;服务器端的设置&quot;">​</a></h2><p>关于如何进行FastAPI和VUE3的通信问题，<a href="./关于FastAPI与Vue3的通信.html">关于FastAPI与Vue3的通信</a>中已有详细介绍，其实质是分别告诉前后端该对谁的访问进行响应以及该响应谁。 在<strong>backend/main.py</strong>文件中声明客户端的地址，代码如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fastapi.middleware.cors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> CORSMiddleware</span></span>
<span class="line"><span style="color:#E1E4E8;">app.add_middleware(</span></span>
<span class="line"><span style="color:#E1E4E8;">    CORSMiddleware,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_origins</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://127.0.0.1:5174/&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_credentials</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_methods</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">allow_headers</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],    </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fastapi.middleware.cors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> CORSMiddleware</span></span>
<span class="line"><span style="color:#24292E;">app.add_middleware(</span></span>
<span class="line"><span style="color:#24292E;">    CORSMiddleware,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_origins</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://127.0.0.1:5174/&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_credentials</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_methods</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">allow_headers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],    </span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>其余部分同样遵从<a href="./FastAPI对数据库的增删改查.html">FastAPI对数据库的增删改查</a>的文件结构：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">├─ backend</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ crud.py</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ database.py</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ main.py</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ models.py</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ schemas.py</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ __init__.py</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">├─ backend</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ crud.py</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ database.py</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ main.py</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ models.py</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ schemas.py</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ __init__.py</span></span></code></pre></div><p>然后将当前目录切换至backend的上一级，在命令行运行如下命令： <code>uvicorn backend.main:app --reload --port 8001</code> 这样，服务器端即开始监听<a href="http://127.0.0.1:5174/" target="_blank" rel="noreferrer">http://127.0.0.1:5174/</a>的响应。</p><h2 id="客户端的操作" tabindex="-1">客户端的操作 <a class="header-anchor" href="#客户端的操作" aria-label="Permalink to &quot;客户端的操作&quot;">​</a></h2><p>由于客户端是用官方的脚手架工具命令<code>yarn create vite frontend --template vue</code>生成的，其生成结构如下图所示：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">├─ frontend</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ .vscode</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─ extensions.json</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ index.html</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ package.json</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ public</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─ vite.svg</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ README.md</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ src</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ App.vue</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ assets</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  └─ vue.svg</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ components</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  └─ HelloWorld.vue</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ main.js</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─ style.css</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ vite.config.js</span></span>
<span class="line"><span style="color:#e1e4e8;">│  └─ yarn.lock</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">├─ frontend</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ .vscode</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─ extensions.json</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ index.html</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ package.json</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ public</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─ vite.svg</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ README.md</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ src</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ App.vue</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ assets</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  └─ vue.svg</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ components</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  └─ HelloWorld.vue</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ main.js</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─ style.css</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ vite.config.js</span></span>
<span class="line"><span style="color:#24292e;">│  └─ yarn.lock</span></span></code></pre></div><p>先在<strong>src/components</strong>中建立<strong>Books.vue</strong>单文件组件，然后将<strong>src/App.vue</strong>中的内容全部删除，添加如下代码：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Books </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./components/Books.vue&#39;</span><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#FDAEB7;font-style:italic;">Books</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Books </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./components/Books.vue&#39;</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#B31D28;font-style:italic;">Books</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>src的详细目录内容如下：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">├─ src</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ App.vue</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ assets</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  └─ vue.svg</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ components</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  ├─ Books.vue</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  └─ HelloWorld.vue</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─ main.js</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─ style.css</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">├─ src</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ App.vue</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ assets</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  └─ vue.svg</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ components</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  ├─ Books.vue</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  └─ HelloWorld.vue</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─ main.js</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─ style.css</span></span></code></pre></div><p>需要对数据库的操作均需要在<strong>Books.vue</strong>文件中完成。</p><h2 id="客户端模板框架" tabindex="-1">客户端模板框架 <a class="header-anchor" href="#客户端模板框架" aria-label="Permalink to &quot;客户端模板框架&quot;">​</a></h2><p>在vue的官网上有提供一个CRUD的程序，其地址是：<a href="https://cn.vuejs.org/examples/#crud" target="_blank" rel="noreferrer">https://cn.vuejs.org/examples/#crud</a>，接下来以该程序中的内容为<strong>Books.vue</strong>文件的基础，再来添加对数据库的操作。 为了对关键代码进行说明，本示例中一律不添加css进行样式修饰，仅用浏览器自带的控件进行展示，<strong>Books.vue</strong>中的具体模板代码如下：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;书名：&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-model</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;bookname&quot;</span><span style="color:#E1E4E8;"> /&gt; </span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;价格：&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-model</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;prices&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">hr</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;书籍列表：&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;5&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-model</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selected&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">option</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-for</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;name in names&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:key</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">&gt;{{ name }}&lt;/</span><span style="color:#85E89D;">option</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;addBook&quot;</span><span style="color:#E1E4E8;">&gt;增加&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;updateBook&quot;</span><span style="color:#E1E4E8;">&gt;修改&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;deleteBook&quot;</span><span style="color:#E1E4E8;">&gt;删除&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;getBook&quot;</span><span style="color:#E1E4E8;">&gt;查询&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;书名：&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-model</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;bookname&quot;</span><span style="color:#24292E;"> /&gt; </span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;价格：&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-model</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;prices&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">hr</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;书籍列表：&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;5&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-model</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selected&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">option</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-for</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name in names&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:key</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">&gt;{{ name }}&lt;/</span><span style="color:#22863A;">option</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;addBook&quot;</span><span style="color:#24292E;">&gt;增加&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;updateBook&quot;</span><span style="color:#24292E;">&gt;修改&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;deleteBook&quot;</span><span style="color:#24292E;">&gt;删除&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">@click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;getBook&quot;</span><span style="color:#24292E;">&gt;查询&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>其页面呈现如下图所示： <img src="`+s+`" alt="图 11"></p><p>在上述模板代码中，定义了两个输入框和一个列表框，分别为其绑定了三个v-model属性，该属性可方便对其中的数据进行操作，同时，在列表框中，用v-for语句循环列出了书名和价格。 页面中还增加了四个按钮，分别绑定了四个事件。接下来，我们要为该单文件组件编写相应的javascprit代码。 当然 ，为了使前端能访问后端，还需要在前端文件夹下的<strong>main.js</strong>中添加对后端的辨识，具体代码如下：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">import { createApp } from &#39;vue&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">import App from &#39;./App.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">import axios from &#39;axios&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">axios.defaults.withCredentials = true;</span></span>
<span class="line"><span style="color:#E1E4E8;">axios.defaults.baseURL = &#39;http://127.0.0.1:8001/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">createApp(App).mount(&#39;#app&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">import { createApp } from &#39;vue&#39;</span></span>
<span class="line"><span style="color:#24292E;">import App from &#39;./App.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">import axios from &#39;axios&#39;</span></span>
<span class="line"><span style="color:#24292E;">axios.defaults.withCredentials = true;</span></span>
<span class="line"><span style="color:#24292E;">axios.defaults.baseURL = &#39;http://127.0.0.1:8001/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">createApp(App).mount(&#39;#app&#39;)</span></span></code></pre></div><p>切换当前目录到frontend的上级目录，在命令行运行以下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--port</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5174</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5174</span></span></code></pre></div><p>然后在浏览器中输入<a href="http://127.0.0.1:5174/" target="_blank" rel="noreferrer">http://127.0.0.1:5174/</a>即可看到上述页面截图。只不过此时点击按钮均无反应，这是因为我们还未为其编写相应的事件。</p><h2 id="客户端查询" tabindex="-1">客户端查询 <a class="header-anchor" href="#客户端查询" aria-label="Permalink to &quot;客户端查询&quot;">​</a></h2><p>在之前的文章中介绍过，前端对后端的操作用的是axios库，因此，需要在该文件中引入该库。 在<strong>Books.vue</strong>的模板中，与三个控件关联了三个变量，当然需要在js的数据区域体现，同时由于列表控件中用了循环，也涉及到一个变量，因此，在js的数据区域至少应有四个变量，由于我们需要对数据库进行增删改查，其中需用到数据库的id字段，故在数据区域添加一个bookids数组，具体数据区域如下代码所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      bookname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//关联书名输入框</span></span>
<span class="line"><span style="color:#E1E4E8;">      prices</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,    </span><span style="color:#6A737D;">//关联书的价格</span></span>
<span class="line"><span style="color:#E1E4E8;">      names</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [],    </span><span style="color:#6A737D;">//关联列表中总数据      </span></span>
<span class="line"><span style="color:#E1E4E8;">      selected</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//关联列表中的被选中项</span></span>
<span class="line"><span style="color:#E1E4E8;">      bookids </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[],  </span><span style="color:#6A737D;">//存储与\`names\`对应的id</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      bookname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//关联书名输入框</span></span>
<span class="line"><span style="color:#24292E;">      prices</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,    </span><span style="color:#6A737D;">//关联书的价格</span></span>
<span class="line"><span style="color:#24292E;">      names</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [],    </span><span style="color:#6A737D;">//关联列表中总数据      </span></span>
<span class="line"><span style="color:#24292E;">      selected</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//关联列表中的被选中项</span></span>
<span class="line"><span style="color:#24292E;">      bookids </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[],  </span><span style="color:#6A737D;">//存储与\`names\`对应的id</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>由于在服务器中的编写是针对书名进行模糊查询，因此在查询时需要提供书名，代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">(){...    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  methods</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">getBook</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      let that </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//存储全局this</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">axios</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        method</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        url</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/books/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        params</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">          bookname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> that.bookname,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      }).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;"> (res){</span><span style="color:#6A737D;">//根据返回值存储相关数据        </span></span>
<span class="line"><span style="color:#E1E4E8;">        that.names </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">        that.bookids </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">res.data.length; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">          that.names.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(\`\${res.data[i].bookname},\${res.data[i].prices}\`);</span></span>
<span class="line"><span style="color:#E1E4E8;">          that.bookids.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(res.data[i].id);          </span></span>
<span class="line"><span style="color:#E1E4E8;">        }        </span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">(){...    };</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  methods</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">getBook</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      let that </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//存储全局this</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">axios</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        method</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/books/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        params</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">          bookname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> that.bookname,</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      }).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;"> (res){</span><span style="color:#6A737D;">//根据返回值存储相关数据        </span></span>
<span class="line"><span style="color:#24292E;">        that.names </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">        that.bookids </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">res.data.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">          that.names.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(\`\${res.data[i].bookname},\${res.data[i].prices}\`);</span></span>
<span class="line"><span style="color:#24292E;">          that.bookids.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(res.data[i].id);          </span></span>
<span class="line"><span style="color:#24292E;">        }        </span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>上述代码可根据bookname变量进行查询，并将返回值分别存储在names和bookids两个数组中，其中names中只是简单地将书名和价格用,连接。 由于目前数据库中并无数据，因此查询输入的字符串时，返回的names为空，这样显示的界面如下图所示： <img src="`+e+`" alt="图 19"></p><h2 id="客户端增加数据" tabindex="-1">客户端增加数据 <a class="header-anchor" href="#客户端增加数据" aria-label="Permalink to &quot;客户端增加数据&quot;">​</a></h2><p>在增加数据时，后台的代码需用数据框架schemas.BooksBase来校验，这个类只包含书名和书价两个量，因此，只需要将这两个数据传输给后台即可，代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">(){...    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  methods</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">getBook</span><span style="color:#E1E4E8;">() {...    }, </span><span style="color:#6A737D;">//查询数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hasValidInput</span><span style="color:#E1E4E8;">() {</span><span style="color:#6A737D;">//校验输入数据</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.prices </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.bookname.</span><span style="color:#B392F0;">trim</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {        </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addBook</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasValidInput</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> bookinfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> \`\${</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.bookname},\${</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.prices}\`;</span></span>
<span class="line"><span style="color:#E1E4E8;">        let that </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">that.names.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(bookinfo)) {          </span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">axios</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            method</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;POST&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            url</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/books/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            data</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              bookname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.bookname,</span></span>
<span class="line"><span style="color:#E1E4E8;">              prices</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.prices,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          }).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;"> (res) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            that.names.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(bookinfo);</span></span>
<span class="line"><span style="color:#E1E4E8;">            that.bookids.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(res.data.id);</span></span>
<span class="line"><span style="color:#E1E4E8;">          });</span></span>
<span class="line"><span style="color:#E1E4E8;">          that.bookname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">          that.prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;      </span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">(){...    };</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  methods</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">getBook</span><span style="color:#24292E;">() {...    }, </span><span style="color:#6A737D;">//查询数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hasValidInput</span><span style="color:#24292E;">() {</span><span style="color:#6A737D;">//校验输入数据</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.prices </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.bookname.</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {        </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">addBook</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasValidInput</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> bookinfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> \`\${</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.bookname},\${</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.prices}\`;</span></span>
<span class="line"><span style="color:#24292E;">        let that </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">that.names.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(bookinfo)) {          </span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">axios</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            method</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;POST&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/books/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            data</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              bookname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.bookname,</span></span>
<span class="line"><span style="color:#24292E;">              prices</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.prices,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          }).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;"> (res) {</span></span>
<span class="line"><span style="color:#24292E;">            that.names.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(bookinfo);</span></span>
<span class="line"><span style="color:#24292E;">            that.bookids.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(res.data.id);</span></span>
<span class="line"><span style="color:#24292E;">          });</span></span>
<span class="line"><span style="color:#24292E;">          that.bookname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">          that.prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;      </span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在向数据库添加时，要做两个检查：</p><ol><li>当输入的数据为空时，不予操作；</li><li>当输入的数据已经存在于当前列表中时，不予添加，这样就在客户端完成了数据的校验，省去了与服务器通信的烦琐。 因此，需要单独编写一个校验函数hasValidInput()完成对数据是否为空的检验。 之后的axios参数data会传递当前书名和书价，后端的框架会自动将其组合成schemas.BooksBase类，当添加成功后，服务器会返回新增加的数据，此时再将其添加至names，同时将相应的id加入bookids数组中。</li></ol><p>这里要注意，在新数据未增加时，并没有对应的id。 现向数据库中添加两条记录，则程序会自动将两条记录显示于列表中，如下图：</p><p>此时，在浏览器安装了Vue.js devtools这个插件的情况下，可以看到bookids这个数组中存放的书籍id号，如下图所示： <img src="`+n+'" alt="图 13"></p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>vue.js-devtools这个插件在调试vue开发的网站时非常有用</p></div><p>此时来检查一下查询功能，则显示如下： <img src="'+s+'" alt="图 16"> 对应的控制台数据显示如下： <img src="'+n+`" alt="图 17"></p><h2 id="客户端删除数据" tabindex="-1">客户端删除数据 <a class="header-anchor" href="#客户端删除数据" aria-label="Permalink to &quot;客户端删除数据&quot;">​</a></h2><p>删除数据时只需要提供书籍的id号即可，这里要注意，如果单独在POST中传递数据，FastAPI需要将该数据也放入路径中，在FastAPI中对应的删除代码如下（main.py里）：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 删除书籍</span></span>
<span class="line"><span style="color:#B392F0;">@app.post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/deleteBook/</span><span style="color:#79B8FF;">{bookid}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">delete_book</span><span style="color:#E1E4E8;">(bookid:</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, db:Session</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">Depends(get_db)):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> crud.delete_book_by_Id(db, </span><span style="color:#FFAB70;">bookId</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">bookid)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 删除书籍</span></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/deleteBook/</span><span style="color:#005CC5;">{bookid}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">delete_book</span><span style="color:#24292E;">(bookid:</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, db:Session</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Depends(get_db)):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> crud.delete_book_by_Id(db, </span><span style="color:#E36209;">bookId</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">bookid)</span></span></code></pre></div><p>在<strong>Books.vue</strong>中，对应的删除代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">(){...    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  methods</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">getBook</span><span style="color:#E1E4E8;">() {...    }, </span><span style="color:#6A737D;">//查询数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hasValidInput</span><span style="color:#E1E4E8;">() {... }</span><span style="color:#6A737D;">//校验输入数据    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addBook</span><span style="color:#E1E4E8;">() {...    }, </span><span style="color:#6A737D;">//增加数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">deleteBook</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.selected) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.names.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.selected);        </span></span>
<span class="line"><span style="color:#E1E4E8;">        let that </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//存储全局this</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">axios</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            method</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;POST&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            url</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> \`</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">deleteBook</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\${that.bookids[i]}\`,</span></span>
<span class="line"><span style="color:#E1E4E8;">            data</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              bookid</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> that.bookids[i],</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          }).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;"> (res) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res.data);</span></span>
<span class="line"><span style="color:#E1E4E8;">            that.names.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(i, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            that.bookids.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(i, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">          });</span></span>
<span class="line"><span style="color:#E1E4E8;">        that.selected </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        that.bookname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        that.prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">(){...    };</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  methods</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">getBook</span><span style="color:#24292E;">() {...    }, </span><span style="color:#6A737D;">//查询数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hasValidInput</span><span style="color:#24292E;">() {... }</span><span style="color:#6A737D;">//校验输入数据    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">addBook</span><span style="color:#24292E;">() {...    }, </span><span style="color:#6A737D;">//增加数据</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">deleteBook</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.selected) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.names.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.selected);        </span></span>
<span class="line"><span style="color:#24292E;">        let that </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//存储全局this</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">axios</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            method</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;POST&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> \`</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">deleteBook</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">\${that.bookids[i]}\`,</span></span>
<span class="line"><span style="color:#24292E;">            data</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              bookid</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> that.bookids[i],</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          }).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;"> (res) {</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res.data);</span></span>
<span class="line"><span style="color:#24292E;">            that.names.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(i, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            that.bookids.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(i, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">          });</span></span>
<span class="line"><span style="color:#24292E;">        that.selected </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        that.bookname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        that.prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">代码解释</p><p>先判断用户是否点击列表中的数据，然后向服务器发送删除请求，待服务器成功返回后，将names和bookids两个数组中的内容相应删除，最后再将相关v-model变量置空.</p></div><p>由于axios是在回调函数中处理当前页面的全局变量，因此需要将全局的指针this保存为that，然后在then部分使用that来引用全局变量。</p><h2 id="客户端更新数据" tabindex="-1">客户端更新数据 <a class="header-anchor" href="#客户端更新数据" aria-label="Permalink to &quot;客户端更新数据&quot;">​</a></h2><p>修改数据可以用POST带参数的方式，也可以直接用<strong>schemas.Books</strong>来校验数据，在上一篇中我们是用带参数的方式，这一次来换一种方式。 在FastAPI的<strong>main.py</strong>中，修改数据的路由代码如下所示：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/updateBook/&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response_model</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">schemas.Books)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_book</span><span style="color:#E1E4E8;">(book:schemas.Books, db:Session</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">Depends(get_db)):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> crud.update_book_by_id(db, </span><span style="color:#FFAB70;">book</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">book)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/updateBook/&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">response_model</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">schemas.Books)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_book</span><span style="color:#24292E;">(book:schemas.Books, db:Session</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Depends(get_db)):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> crud.update_book_by_id(db, </span><span style="color:#E36209;">book</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">book)</span></span></code></pre></div><p>对应地，crud.py中的修改数据部分代码应为：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_book_by_id</span><span style="color:#E1E4E8;">(db:Session, book:schemas.Books):</span></span>
<span class="line"><span style="color:#E1E4E8;">    db_book </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> db.query(models.Books).filter(models.Books.id </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> book.id).one_or_none()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> db_book </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> var, value </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">vars</span><span style="color:#E1E4E8;">(book).items():</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">setattr</span><span style="color:#E1E4E8;">(db_book, var, value) </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">    db.commit()</span></span>
<span class="line"><span style="color:#E1E4E8;">    db.refresh(db_book)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> db_book</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_book_by_id</span><span style="color:#24292E;">(db:Session, book:schemas.Books):</span></span>
<span class="line"><span style="color:#24292E;">    db_book </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> db.query(models.Books).filter(models.Books.id </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> book.id).one_or_none()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> db_book </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> var, value </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">vars</span><span style="color:#24292E;">(book).items():</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">setattr</span><span style="color:#24292E;">(db_book, var, value) </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    db.commit()</span></span>
<span class="line"><span style="color:#24292E;">    db.refresh(db_book)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> db_book</span></span></code></pre></div><p>前端Books.vue中的修改代码为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">(){...    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  methods</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">getBook</span><span style="color:#E1E4E8;">() {...    }, </span><span style="color:#6A737D;">//查询数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hasValidInput</span><span style="color:#E1E4E8;">() {... }</span><span style="color:#6A737D;">//校验输入数据    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addBook</span><span style="color:#E1E4E8;">() {...    }, </span><span style="color:#6A737D;">//增加数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">deleteBook</span><span style="color:#E1E4E8;">() {...    }, </span><span style="color:#6A737D;">//删除数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">updateBook</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasValidInput</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.selected) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> bookinfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> \`\${</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.bookname},\${</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.prices}\`;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.names.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.selected);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">        let that </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//存储全局this</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">that.names.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(bookinfo)){</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">axios</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">              method</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;POST&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              url</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> \`</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">updateBook</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\`,</span></span>
<span class="line"><span style="color:#E1E4E8;">              data</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> that.bookids[i],</span></span>
<span class="line"><span style="color:#E1E4E8;">                bookname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> that.bookname,</span></span>
<span class="line"><span style="color:#E1E4E8;">                prices</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> that.prices,</span></span>
<span class="line"><span style="color:#E1E4E8;">              },</span></span>
<span class="line"><span style="color:#E1E4E8;">            }).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;"> (res) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              that.names[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> bookinfo;</span></span>
<span class="line"><span style="color:#E1E4E8;">              that.selected </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> bookinfo;</span></span>
<span class="line"><span style="color:#E1E4E8;">              that.bookname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">              that.prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">        }        </span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">(){...    };</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  methods</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">getBook</span><span style="color:#24292E;">() {...    }, </span><span style="color:#6A737D;">//查询数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hasValidInput</span><span style="color:#24292E;">() {... }</span><span style="color:#6A737D;">//校验输入数据    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">addBook</span><span style="color:#24292E;">() {...    }, </span><span style="color:#6A737D;">//增加数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">deleteBook</span><span style="color:#24292E;">() {...    }, </span><span style="color:#6A737D;">//删除数据</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">updateBook</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasValidInput</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.selected) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> bookinfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> \`\${</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.bookname},\${</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.prices}\`;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.names.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.selected);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        let that </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//存储全局this</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">that.names.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(bookinfo)){</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">axios</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">              method</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;POST&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> \`</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">updateBook</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">\`,</span></span>
<span class="line"><span style="color:#24292E;">              data</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> that.bookids[i],</span></span>
<span class="line"><span style="color:#24292E;">                bookname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> that.bookname,</span></span>
<span class="line"><span style="color:#24292E;">                prices</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> that.prices,</span></span>
<span class="line"><span style="color:#24292E;">              },</span></span>
<span class="line"><span style="color:#24292E;">            }).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;"> (res) {</span></span>
<span class="line"><span style="color:#24292E;">              that.names[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> bookinfo;</span></span>
<span class="line"><span style="color:#24292E;">              that.selected </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> bookinfo;</span></span>
<span class="line"><span style="color:#24292E;">              that.bookname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">              that.prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        }        </span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>上述代码中，通过判断当前输入的数据是否在当前列表中，来确定是否进行修改，一旦修改完成，则刷新全局names数组。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>本文利用Vue3作为客户端，向后端FastAPI发送数据完成了对数据库的增删改查操作。</p><h2 id="仓库代码" tabindex="-1">仓库代码 <a class="header-anchor" href="#仓库代码" aria-label="Permalink to &quot;仓库代码&quot;">​</a></h2><p><a href="https://gitee.com/windstarry/fastapi_vue_demo" target="_blank" rel="noreferrer">仓库代码展示</a></p><h2 id="相关文章" tabindex="-1">相关文章 <a class="header-anchor" href="#相关文章" aria-label="Permalink to &quot;相关文章&quot;">​</a></h2><ol><li><a href="./关于FastAPI与Vue3的通信.html">关于FastAPI与Vue3的通信</a></li><li><a href="./FastAPI对数据库的增删改查.html">FastAPI对数据库的增删改查</a></li><li><a href="./基于Vue3和FastAPI对数据库进行操作.html">基于Vue3和FastAPI对数据库进行操作</a></li></ol>`,62),r=[c];function E(y,i,d,F,u,h){return l(),p("div",null,r)}const g=a(t,[["render",E]]);export{k as __pageData,g as default};
